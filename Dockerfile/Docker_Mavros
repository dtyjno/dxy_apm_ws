ARG ROS_DISTRO=humble

FROM ros:${ROS_DISTRO}-ros-base

ENV DEBIAN_FRONTEND=noninteractive

# 设置Ubuntu镜像源 (noble for jazzy, jammy for humble)
RUN arch=$(dpkg --print-architecture) && \
    if [ "${ROS_DISTRO}" = "humble" ]; then \
      UBUNTU_VERSION="jammy"; \
    elif [ "${ROS_DISTRO}" = "jazzy" ]; then \
      UBUNTU_VERSION="noble"; \
    else \
      UBUNTU_VERSION="jammy"; \
    fi && \
    if [ "$arch" = "amd64" ] || [ "$arch" = "i386" ]; then \
      echo "deb [arch=$arch] https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ ${UBUNTU_VERSION} main restricted universe multiverse" > /etc/apt/sources.list && \
      echo "deb [arch=$arch] https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ ${UBUNTU_VERSION}-updates main restricted universe multiverse" >> /etc/apt/sources.list && \
      echo "deb [arch=$arch] https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ ${UBUNTU_VERSION}-backports main restricted universe multiverse" >> /etc/apt/sources.list && \
      echo "deb [arch=$arch] https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ ${UBUNTU_VERSION}-security main restricted universe multiverse" >> /etc/apt/sources.list ; \
      # 增加官方源作为补充，避免国内镜像缺包导致404
      echo "deb [arch=$arch] http://archive.ubuntu.com/ubuntu ${UBUNTU_VERSION} main restricted universe multiverse" >> /etc/apt/sources.list && \
      echo "deb [arch=$arch] http://archive.ubuntu.com/ubuntu ${UBUNTU_VERSION}-updates main restricted universe multiverse" >> /etc/apt/sources.list ; \
    else \
      echo "deb [arch=$arch] https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ ${UBUNTU_VERSION} main restricted universe multiverse" > /etc/apt/sources.list && \
      echo "deb [arch=$arch] https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ ${UBUNTU_VERSION}-updates main restricted universe multiverse" >> /etc/apt/sources.list && \
      echo "deb [arch=$arch] https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ ${UBUNTU_VERSION}-backports main restricted universe multiverse" >> /etc/apt/sources.list && \
      echo "deb [arch=$arch] http://ports.ubuntu.com/ubuntu-ports/ ${UBUNTU_VERSION}-security main restricted universe multiverse" >> /etc/apt/sources.list ; \
      # 增加官方源作为补充，避免国内镜像缺包导致404
      echo "deb [arch=$arch] http://ports.ubuntu.com/ubuntu-ports/ ${UBUNTU_VERSION} main restricted universe multiverse" >> /etc/apt/sources.list && \
      echo "deb [arch=$arch] http://ports.ubuntu.com/ubuntu-ports/ ${UBUNTU_VERSION}-updates main restricted universe multiverse" >> /etc/apt/sources.list ; \
    fi && \
    rm -f /etc/apt/sources.list.d/* && \
    apt-get update && \
    apt-get install -y --no-install-recommends curl gnupg2 && \
    rm -f /etc/apt/sources.list.d/ros2.list && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    chmod a+r /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] https://mirrors.tuna.tsinghua.edu.cn/ros2/ubuntu ${UBUNTU_VERSION} main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt-get update && \
    apt-get upgrade -y

# 安装必要的依赖包（包括图形界面和仿真环境）
RUN apt-get install -y --no-install-recommends \
    python3-pip \
    python3-colcon-common-extensions \
    python3-rosdep \
    ros-${ROS_DISTRO}-mavros \
    ros-${ROS_DISTRO}-mavros-msgs \
    ros-${ROS_DISTRO}-mavros-extras \
    ros-${ROS_DISTRO}-plotjuggler-ros \
    ros-$ROS_DISTRO-plotjuggler-ros \
    ros-$ROS_DISTRO-pal-statistics \
    dbus-x11 \
    wget && \
    # 安装GeographicLib数据集
    # wget https://gitee.com/tyx6/mytools/raw/main/mavros/install_geographiclib_datasets.sh && \
    # chmod a+x install_geographiclib_datasets.sh && \
    # ./install_geographiclib_datasets.sh && \
    # rm install_geographiclib_datasets.sh && \
    wget https://github.com/geographiclib/geographiclib/archive/refs/tags/v2.3.tar.gz && \
    tar xfpz v2.3.tar.gz && \
    cd geographiclib-2.3 && \
    #创建一个单独的构建目录并输入它，例如，
    mkdir BUILD && \
    cd BUILD && \
    #配置软件，指定源目录的路径，使用
    #../configure 
    #make
    #make install
    cmake .. && \
    make && \
    make install && \
    cd ../..  && \
    rm -rf geographiclib-2.3 && \
    # 清理APT缓存
    apt-get autoremove -y -qq && \
    rm -rf /var/lib/apt/lists/*
    
COPY Dockerfile/entrypoint.sh /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]

CMD ["/bin/bash"]

